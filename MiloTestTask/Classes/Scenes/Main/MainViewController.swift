//
//  MainViewController.swift
//  MiloTestTask
//
//  Created by Oleksandr Nechet on 02.02.17.
//  Copyright (c) 2017 Oleksandr Nechet. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol MainViewControllerInput
{
    func displaySomething(viewModel: Main.Something.ViewModel)
}

protocol MainViewControllerOutput
{
    func doSomething(request: Main.Something.Request)
    var alertTitle: String { get }
    var alertMessage: String { get }
}

class MainViewController: UIViewController, MainViewControllerInput
{
    var output: MainViewControllerOutput!
    var router: MainRouter!
    @IBOutlet private var textFieldTitle: UITextField!
    
    // MARK: - Object lifecycle
    
    override func awakeFromNib()
    {
        super.awakeFromNib()
        MainConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        doSomethingOnLoad()
        configureUI()
    }
    
    override func viewDidAppear(_ animated: Bool)
    {
        super.viewDidAppear(animated)
        print("Hello dear user!")
        
        let request = Main.Something.Request()
        output.doSomething(request: request)

        print("How are you today?")
    }
    
    // MARK: - Event handling
    
    func doSomethingOnLoad()
    {
        // NOTE: Ask the Interactor to do some work
    }
    
    // MARK: - Display logic
    
    func displaySomething(viewModel: Main.Something.ViewModel)
    {
        displayAlert(title: viewModel.title,
                     message: viewModel.message)
    }
    
    // MARK: - IBActions
    
    @IBAction func onDisplayAlert()
    {
        displayAlert(title: output.alertTitle,
                     message: output.alertMessage)
    }
    
    // MARK: - Helpers
    
    private func configureUI()
    {
        textFieldTitle.addCancelButton()
        hideKeyboardWhenTappedAround()
    }
}
