//
//  MainInteractor.swift
//  MiloTestTask
//
//  Created by Oleksandr Nechet on 02.02.17.
//  Copyright (c) 2017 Oleksandr Nechet. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol MainInteractorInput
{
    func doSomething(request: Main.Something.Request)
    var alertTitle: String { get }
    var alertMessage: String { get }
}

protocol MainInteractorOutput
{
    func presentSomething(response: Main.Something.Response)
}

class MainInteractor: MainInteractorInput
{
    var output: MainInteractorOutput!
    var worker: MainWorker!
    
    // MARK: - Business logic
    
    var alertTitle: String {
        return Constants.MainModule.alertTitle
    }
    var alertMessage: String {
        return Constants.MainModule.alertMessage
    }
    
    func doSomething(request: Main.Something.Request)
    {
        var result = 0
        
        DispatchQueue.global().async {
            for x in 1...99999 {
                result += x
            }
            
            let response = Main.Something.Response(result: result)
            self.output.presentSomething(response: response)
        }
    }
}
